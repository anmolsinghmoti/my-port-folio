{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anny0\\\\OneDrive\\\\Desktop\\\\My-Portfolio\\\\frontend-react\\\\src\\\\components\\\\AnimatedProgressProvider\\\\AnimatedProgressProvider.jsx\";\nimport React from \"react\";\nimport { Animate } from \"react-move\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AnimatedProgressProvider extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.interval = undefined;\n    this.state = {\n      isAnimated: false\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.repeat) {\n      this.interval = window.setInterval(() => {\n        this.setState({\n          isAnimated: !this.state.isAnimated\n        });\n      }, this.props.duration * 1000);\n    } else {\n      this.setState({\n        isAnimated: !this.state.isAnimated\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.interval);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Animate, {\n      start: () => ({\n        value: this.props.valueStart\n      }),\n      update: () => ({\n        value: [this.state.isAnimated ? this.props.valueEnd : this.props.valueStart],\n        timing: {\n          duration: this.props.duration * 1000,\n          ease: this.props.easingFunction\n        }\n      }),\n      children: _ref => {\n        let {\n          value\n        } = _ref;\n        return this.props.children(value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nAnimatedProgressProvider.defaultProps = {\n  valueStart: 0\n};\nexport default AnimatedProgressProvider;","map":{"version":3,"sources":["C:/Users/anny0/OneDrive/Desktop/My-Portfolio/frontend-react/src/components/AnimatedProgressProvider/AnimatedProgressProvider.jsx"],"names":["React","Animate","AnimatedProgressProvider","Component","interval","undefined","state","isAnimated","componentDidMount","props","repeat","window","setInterval","setState","duration","componentWillUnmount","clearInterval","render","value","valueStart","valueEnd","timing","ease","easingFunction","children","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,YAAxB;;;AAEA,MAAMC,wBAAN,SAAuCF,KAAK,CAACG,SAA7C,CAAuD;AAAA;AAAA;AAAA,SACrDC,QADqD,GAC1CC,SAD0C;AAAA,SAGrDC,KAHqD,GAG7C;AACNC,MAAAA,UAAU,EAAE;AADN,KAH6C;AAAA;;AAWrDC,EAAAA,iBAAiB,GAAG;AAClB,QAAI,KAAKC,KAAL,CAAWC,MAAf,EAAuB;AACrB,WAAKN,QAAL,GAAgBO,MAAM,CAACC,WAAP,CAAmB,MAAM;AACvC,aAAKC,QAAL,CAAc;AACZN,UAAAA,UAAU,EAAE,CAAC,KAAKD,KAAL,CAAWC;AADZ,SAAd;AAGD,OAJe,EAIb,KAAKE,KAAL,CAAWK,QAAX,GAAsB,IAJT,CAAhB;AAKD,KAND,MAMO;AACL,WAAKD,QAAL,CAAc;AACZN,QAAAA,UAAU,EAAE,CAAC,KAAKD,KAAL,CAAWC;AADZ,OAAd;AAGD;AACF;;AAEDQ,EAAAA,oBAAoB,GAAG;AACrBJ,IAAAA,MAAM,CAACK,aAAP,CAAqB,KAAKZ,QAA1B;AACD;;AAEDa,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,OAAD;AACE,MAAA,KAAK,EAAE,OAAO;AACZC,QAAAA,KAAK,EAAE,KAAKT,KAAL,CAAWU;AADN,OAAP,CADT;AAIE,MAAA,MAAM,EAAE,OAAO;AACbD,QAAAA,KAAK,EAAE,CACL,KAAKZ,KAAL,CAAWC,UAAX,GAAwB,KAAKE,KAAL,CAAWW,QAAnC,GAA8C,KAAKX,KAAL,CAAWU,UADpD,CADM;AAIbE,QAAAA,MAAM,EAAE;AACNP,UAAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWK,QAAX,GAAsB,IAD1B;AAENQ,UAAAA,IAAI,EAAE,KAAKb,KAAL,CAAWc;AAFX;AAJK,OAAP,CAJV;AAAA,gBAcG;AAAA,YAAC;AAAEL,UAAAA;AAAF,SAAD;AAAA,eAAe,KAAKT,KAAL,CAAWe,QAAX,CAAoBN,KAApB,CAAf;AAAA;AAdH;AAAA;AAAA;AAAA;AAAA,YADF;AAkBD;;AAhDoD;;AAAjDhB,wB,CAOGuB,Y,GAAe;AACpBN,EAAAA,UAAU,EAAE;AADQ,C;AA4CxB,eAAejB,wBAAf","sourcesContent":["import React from \"react\";\r\nimport { Animate } from \"react-move\";\r\n\r\nclass AnimatedProgressProvider extends React.Component {\r\n  interval = undefined;\r\n\r\n  state = {\r\n    isAnimated: false\r\n  };\r\n\r\n  static defaultProps = {\r\n    valueStart: 0\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.repeat) {\r\n      this.interval = window.setInterval(() => {\r\n        this.setState({\r\n          isAnimated: !this.state.isAnimated\r\n        });\r\n      }, this.props.duration * 1000);\r\n    } else {\r\n      this.setState({\r\n        isAnimated: !this.state.isAnimated\r\n      });\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.clearInterval(this.interval);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Animate\r\n        start={() => ({\r\n          value: this.props.valueStart\r\n        })}\r\n        update={() => ({\r\n          value: [\r\n            this.state.isAnimated ? this.props.valueEnd : this.props.valueStart\r\n          ],\r\n          timing: {\r\n            duration: this.props.duration * 1000,\r\n            ease: this.props.easingFunction\r\n          }\r\n        })}\r\n      >\r\n        {({ value }) => this.props.children(value)}\r\n      </Animate>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AnimatedProgressProvider;\r\n"]},"metadata":{},"sourceType":"module"}